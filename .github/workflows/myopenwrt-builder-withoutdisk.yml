name: MyOpenWrt Builder WithoutDisk
on:
  repository_dispatch:
  workflow_dispatch:
env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: .config
  DIY_P1_SH: diy-part1.sh
  DIY_P2_SH: diy-part2.sh
  UPLOAD_BIN_DIR: false
  UPLOAD_FIRMWARE: true
  UPLOAD_RELEASE: true
  TZ: Asia/Shanghai
jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
    # ==================== ÂàùÂßãÂåñÈò∂ÊÆµ ====================
    - name: Checkout
      uses: actions/checkout@main
    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        # Á≥ªÁªüÁ∫ßÊ∏ÖÁêÜ
        sudo rm -rf /etc/apt/sources.list.d/* \
          /usr/share/dotnet \
          /usr/local/lib/android \
          /opt/ghc \
          /opt/hostedtoolcache/CodeQL \
          /usr/local/lib/python*  # Ê∏ÖÁêÜ Python ÁºìÂ≠ò
        sudo docker system prune -a -f  # DockerÊ∑±Â∫¶Ê∏ÖÁêÜ
        sudo -E apt-get -qq update
        # Á≤æÁÆÄÂÆâË£ÖÂàóË°®ÔºàÁßªÈô§ÈùûÂøÖË¶Å‰æùËµñÔºâ
        sudo -E apt-get -qq install \
          build-essential \
          ccache \
          gcc-multilib \
          g++-multilib \
          git \
          libncurses5-dev \
          libssl-dev \
          python3 \
          rsync \
          wget \
          zlib1g-dev
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir
        df -hT  # ÂàùÂßãÂåñÂêéÊ£ÄÊü•Á©∫Èó¥
    # ==================== Ê∫êÁ†ÅËé∑ÂèñÈò∂ÊÆµ ====================
    - name: Clone source code
      working-directory: /workdir
      run: |
        echo "üîÑ ÂÖãÈöÜÂâçÁ£ÅÁõòÁ©∫Èó¥Ôºö" && df -hT $PWD  # Á£ÅÁõòÁ©∫Èó¥Ê£ÄÊü•
        git clone $REPO_URL -b $REPO_BRANCH openwrt --depth=1  # ÊµÖÂ±ÇÂÖãÈöÜ
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt
        echo "‚úÖ ÂÖãÈöÜÂêéÁ£ÅÁõòÁ©∫Èó¥Ôºö" && df -hT $PWD  # Á£ÅÁõòÁ©∫Èó¥Ê£ÄÊü•
    # ==================== Ëá™ÂÆö‰πâÈÖçÁΩÆÈò∂ÊÆµ ====================
    - name: Load custom feeds
      run: |
        [ -e $FEEDS_CONF ] && mv $FEEDS_CONF openwrt/feeds.conf.default
        chmod +x $DIY_P1_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P1_SH
    - name: Update feeds
      run: cd openwrt && ./scripts/feeds update -a
    - name: Install feeds
      run: cd openwrt && ./scripts/feeds install -a
    - name: Load custom configuration
      run: |
        [ -e files ] && mv files openwrt/files
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x $DIY_P2_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P2_SH
    # ==================== ÁºñËØëÂáÜÂ§áÈò∂ÊÆµ ====================
    - name: Download package
      id: package
      run: |
        cd openwrt
        make defconfig
        echo "üîΩ ÂºÄÂßã‰∏ãËΩΩ‰æùËµñÂåÖ..."
        make download -j8
        # Ê∏ÖÁêÜÊó†Êïà‰∏ãËΩΩÊñá‰ª∂
        find dl -size -1024c -exec rm -f {} \;  # Âà†Èô§Â∞è‰∫é 1KB ÁöÑÊñá‰ª∂
        find dl -name "*.zip" -exec rm -f {} \;  # ÊåâÈúÄÂà†Èô§ZIPÊñá‰ª∂
        echo "üì¶ ‰∏ãËΩΩÂêéÁ£ÅÁõòÁ©∫Èó¥Ôºö" && df -hT $PWD  # Á£ÅÁõòÁ©∫Èó¥Ê£ÄÊü•
    # ==================== ÁºñËØëÈò∂ÊÆµ ====================
    - name: Compile the firmware
      id: compile
      run: |
        cd openwrt
        echo "üî® ÂºÄÂßãÁºñËØëÔºà‰ΩøÁî® $(nproc) Á∫øÁ®ãÔºâ..."
        make -j$(nproc) || make -j1 || make -j1 V=s
        # ÁºñËØëÂêéÊ∏ÖÁêÜ‰∏≠Èó¥Êñá‰ª∂
        rm -rf build_dir/target-*/linux-*/tmp  # Âà†Èô§ÂÜÖÊ†∏‰∏¥Êó∂Êñá‰ª∂
        rm -rf staging_dir/target-*/linux-*/   # Âà†Èô§ÊöÇÂ≠òÁõÆÂΩï
        echo "üíæ ÁºñËØëÂêéÁ£ÅÁõòÁ©∫Èó¥Ôºö" && df -hT $PWD  # Á£ÅÁõòÁ©∫Èó¥Ê£ÄÊü•
        # ÁîüÊàêËæìÂá∫ÂèòÈáè
        grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' > DEVICE_NAME
        [ -s DEVICE_NAME ] && echo "DEVICE_NAME=_$(cat DEVICE_NAME)" >> $GITHUB_ENV
        echo "FILE_DATE=_$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV
        echo "status=success" >> $GITHUB_OUTPUT
    # ==================== ËæìÂá∫Â§ÑÁêÜÈò∂ÊÆµ ====================
    - name: Check space usage
      if: (!cancelled())
      run: df -hT
    - name: Upload bin directory
      uses: actions/upload-artifact@main
      if: steps.compile.outputs.status == 'success' && env.UPLOAD_BIN_DIR == 'true'
      with:
        name: OpenWrt_bin${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: openwrt/bin
    - name: Organize files
      id: organize
      if: env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      run: |
        cd openwrt/bin/targets/*/*
        rm -rf packages  # Ê∏ÖÁêÜÂÜó‰ΩôÂåÖÁõÆÂΩï
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        echo "status=success" >> $GITHUB_OUTPUT
    - name: Upload firmware directory
      uses: actions/upload-artifact@main
      if: steps.organize.outputs.status == 'success' && !cancelled()
      with:
        name: OpenWrt_firmware${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: ${{ env.FIRMWARE }}
    # ==================== ÂèëÂ∏ÉÈò∂ÊÆµ ====================
    - name: Generate release tag
      id: tag
      if: env.UPLOAD_RELEASE == 'true' && !cancelled()
      run: |
        echo "release_tag=$(date +"%Y.%m.%d-%H%M")" >> $GITHUB_OUTPUT
        touch release.txt
        echo "status=success" >> $GITHUB_OUTPUT
    - name: Upload firmware to release
      uses: softprops/action-gh-release@v1
      if: steps.tag.outputs.status == 'success' && !cancelled()
      env:
        GITHUB_TOKEN: ${{ secrets.MY_TOKEN }}
      with:
        tag_name: ${{ steps.tag.outputs.release_tag }}
        body_path: release.txt
        files: ${{ env.FIRMWARE }}/*
    # ==================== Ê∏ÖÁêÜÈò∂ÊÆµ ====================
    - name: Delete workflow runs
      uses: Mattraks/delete-workflow-runs@main
      with:
        retain_days: 0
        keep_minimum_runs: 2
      env:
        GITHUB_TOKEN: ${{ secrets.MY_TOKEN }}
    - name: Remove old Releases
      uses: dev-drprasad/delete-older-releases@master
      if: env.UPLOAD_RELEASE == 'true' && !cancelled()
      with:
        keep_latest: 3
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ secrets.MY_TOKEN }}
